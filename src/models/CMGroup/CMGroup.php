<?php/** * Group module * * @package NocturnalCore */class CMGroup extends CObject implements ArrayAccess{	public $group;		public function __construct($id = null)	{		parent::__construct();				if ($id!=null)		{			$this->group = $this->LoadById($id);		}		else		{			$this->group['acronym']		= '';			$this->group['name']		= '';			$this->group['id']			= '';		}	}		public function offsetSet($offset, $value) { if (is_null($offset)) { $this->group[] = $value; } else { $this->group[$offset] = $value; }}	public function offsetExists($offset) { return isset($this->group[$offset]); }	public function offsetUnset($offset) { unset($this->group[$offset]); }	public function offsetGet($offset) { return isset($this->group[$offset]) ? $this->group[$offset] : null; }		/**	 * Reads all groups from database.	 * 	 * 	 */		public function ReadAll()	{		$ret = $this->database->Get('group');		for ($i=0;$i<count($ret); $i++)		{			$tmp = $this->database->Get('user2group', array('count(*)'), array('idGroup' => $ret[$i]['id']));			if (count($tmp))			{				$ret[$i]['users'] = $tmp[0]['count(*)'];			}			else			{				$ret[$i]['users'] = 0;			}		}		return $ret;	}		/**	 * Edits a group (or add if id is not set).	 * 	 * @param String group acronym	 * @param String group name	 */		public function Edit($acronym, $name)	{		$ret = false;				if (empty($this['id']))		{			if (!isset($this->config['CMUser-Groups'][$acronym]))			{				$this->config['CMUser-Groups'][strtolower($acronym)] = array(					'acronym' => $acronym,					'name'	=> $name,				);								$this->user->SyncGroupsWithDatabase();								$save = new CMConfig();				$save->SaveConfigToFile();								$ret = true;			}		}		else		{			$updateArray = array(				'acronym'	=> $acronym,				'name'		=> $name,			);						$ret = $this->database->Update('group', $updateArray, array('id' => $this['id']));						foreach($this->config['CMUser-Groups'] as $key => $value)			{				if ($value['acronym']==$this['acronym'])				{					$this->config['CMUser-Groups'][$key] = $updateArray;				}			}						$save = new CMConfig();			$save->SaveConfigToFile();		}				return ret;	}		/**	 * Removes a group from database and config.	 * 	 * 	 */		public function Remove()	{		foreach($this->config['CMUser-Groups'] as $ac => $array)		{			if ($array['acronym']==$this['acronym'])			{				unset($this->config['CMUser-Groups'][$ac]);				$model = new CMConfig();				$model->saveConfigToFile();			}		}		if (!empty($this['id']))		{			$ret = $this->database->Delete('user2group', array('idGroup' => $this['id']));			$ret2 = $this->database->Delete('group', array('id' => $this['id']));						return true;		}				return false;	}		/**	 * Loads the group by id from database.	 * 	 * @param Integer id	 */		public function LoadById($id)	{		$tmpArray = $this->database->Get('group', array('*'), array('id' => $id));				if (isset($tmpArray[0]))		{			return $tmpArray[0];		}		return array('acronym' => '', 'name' => '', 'id' => '');	}}